{
  "name": "TurboMCP Studio Sampling Test Server",
  "command": "python3",
  "args": ["test_sampling_elicitation_server.py", "simple"],
  "env": {},
  "description": "Test server for sampling and elicitation features",
  "scenarios": {
    "simple": {
      "name": "Simple Sampling",
      "description": "Basic text sampling request",
      "expectedBehavior": "Client should display approval modal with simple text request"
    },
    "complex": {
      "name": "Complex Sampling",
      "description": "Multi-message conversation with system prompt",
      "expectedBehavior": "Client should display full conversation history and system prompt"
    },
    "preferences": {
      "name": "Model Preferences",
      "description": "Test model preference interpretation",
      "expectedBehavior": "Client should respect cost/speed/intelligence priorities and hints"
    },
    "image": {
      "name": "Image Content",
      "description": "Sampling request with image content",
      "expectedBehavior": "Client should display image and text content correctly"
    },
    "elicitation": {
      "name": "Simple Elicitation",
      "description": "Basic text input elicitation",
      "expectedBehavior": "Client should display form with text input field"
    },
    "schema": {
      "name": "Complex Schema",
      "description": "Multi-field schema with validation",
      "expectedBehavior": "Client should generate form with all field types and validation"
    },
    "all": {
      "name": "All Scenarios",
      "description": "Run all test scenarios sequentially",
      "expectedBehavior": "Client should handle all scenarios without errors"
    }
  },
  "testChecklist": [
    {
      "id": "UI-001",
      "description": "Sampling approval modal appears",
      "category": "UI",
      "automated": false
    },
    {
      "id": "UI-002",
      "description": "All message content is visible",
      "category": "UI",
      "automated": false
    },
    {
      "id": "UI-003",
      "description": "System prompt is displayed",
      "category": "UI",
      "automated": false
    },
    {
      "id": "UI-004",
      "description": "Model preferences are shown",
      "category": "UI",
      "automated": false
    },
    {
      "id": "UI-005",
      "description": "Cost/token estimates are calculated",
      "category": "UI",
      "automated": false
    },
    {
      "id": "UI-006",
      "description": "Protocol Inspector link works",
      "category": "UI",
      "automated": false
    },
    {
      "id": "FUNC-001",
      "description": "Approve button sends request to LLM",
      "category": "Functional",
      "automated": true
    },
    {
      "id": "FUNC-002",
      "description": "Reject button sends error response",
      "category": "Functional",
      "automated": true
    },
    {
      "id": "FUNC-003",
      "description": "Edit request modifies content",
      "category": "Functional",
      "automated": false
    },
    {
      "id": "FUNC-004",
      "description": "Quick response templates work",
      "category": "Functional",
      "automated": false
    },
    {
      "id": "PROTO-001",
      "description": "JSON-RPC 2.0 format is correct",
      "category": "Protocol",
      "automated": true
    },
    {
      "id": "PROTO-002",
      "description": "Request/response ID correlation",
      "category": "Protocol",
      "automated": true
    },
    {
      "id": "PROTO-003",
      "description": "Capability declaration includes sampling",
      "category": "Protocol",
      "automated": true
    },
    {
      "id": "PROTO-004",
      "description": "camelCase field names",
      "category": "Protocol",
      "automated": true
    }
  ],
  "llmProviders": {
    "openai": {
      "required": true,
      "envVar": "OPENAI_API_KEY",
      "testModels": ["gpt-4o-mini", "gpt-4o"]
    },
    "anthropic": {
      "required": false,
      "envVar": "ANTHROPIC_API_KEY",
      "testModels": ["claude-3-5-sonnet-20241022", "claude-3-haiku-20240307"]
    }
  }
}
